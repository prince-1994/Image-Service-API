name: Test and Deploy Image Service API

on:
  push:
    branches:
      - master

jobs:
  test-lint-build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create and activate venv
        run: python3 -m venv .venv && source .venv/bin/activate
      - name: Install libraries
        run: pip3 install -r requirements.txt
      - name: Test
        run: python3 -m pytest tests
      - name: Lint
        run: python3 -m flake8 --exclude .venv
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ysahudev/image-service-api:${{ github.sha }}

  deploy-to-ec2:
    runs-on: self-hosted
    needs: [test-lint-build]
    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mkdir -p image-service-api && cd image-service-api
            echo "${{ secrets.RUNTIME_ENV_SECRETS }}" > .env
            export $(cat .env | xargs)
            docker stop image-service-api || true
            docker rm image-service-api || true
            docker pull ${{ secrets.DOCKERHUB_USER }}/image-service-api:${{ github.sha }}
            docker run -d --rm --name image-service-api --env-file .env -p $PORT:$PORT \
            ${{ secrets.DOCKERHUB_USER }}/image-service-api:${{ github.sha }} \
            sh -c "uvicorn server.main:app --host 0.0.0.0 --port $PORT"

  nginx-update:
    runs-on: self-hosted
    needs: [deploy-to-ec2]
    steps:
      - name: Update Nginx config and restart
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd image-service-api
            export $(cat .env | xargs)
            sudo envsubst < /etc/nginx/nginx.template.conf > $DOMAIN
            sudo cp $DOMAIN /etc/nginx/sites-available/$DOMAIN
            sudo ln -sf /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/$DOMAIN
            sudo systemctl restart nginx
